{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","components/Calendar/CalendarHead.js","components/Calendar/RegSchedule.js","components/Calendar/DayComponent.js","components/Calendar/CalendarBody.js","components/Calendar/Calendar.js","components/Salary.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Home","href","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","id","fetch","response","json","data","aria-labelledby","map","forecast","key","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","aria-live","CalendarHead","Date","getFullYear","getMonth","RegSchedule","console","log","placeholder","type","closePopup","React","Generate","today","moment","startWeek","clone","startOf","week","endWeek","endOf","calendar","push","Array","fill","n","i","current","add","isSelected","format","isGrayed","isToday","cur_date","openPopup","DayComponent","showPopup","togglePopup","CalendarBody","Calendar","Salary","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"wdAaaA,G,MAAb,kDAGE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,MAAQ,CACXC,WAAW,GALI,EAHrB,2DAaIC,KAAKC,SAAS,CACZF,WAAYC,KAAKF,MAAMC,cAd7B,+BAmBI,OACE,gCACE,kBAACG,EAAA,EAAD,CACEC,UAAU,+EACVC,OAAK,GAEL,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,IAAKC,IAAMC,GAAG,KAA3B,kCAGA,kBAACC,EAAA,EAAD,CAAeC,QAASX,KAAKJ,aAAcO,UAAU,SACrD,kBAACS,EAAA,EAAD,CACET,UAAU,uCACVU,QAASb,KAAKF,MAAMC,UACpBe,QAAM,GAEN,wBAAIX,UAAU,wBACZ,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAST,IAAKC,IAAML,UAAU,YAAYM,GAAG,KAA7C,SAIF,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAST,IAAKC,IAAML,UAAU,YAAYM,GAAG,WAA7C,6BAIF,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAST,IAAKC,IAAML,UAAU,YAAYM,GAAG,YAA7C,YAIF,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAST,IAAKC,IAAML,UAAU,YAAYM,GAAG,eAA7C,wBApDlB,GAA6BQ,cAAhBvB,EACJwB,YAAcxB,EAAQyB,KCVxB,IAAMC,EAAb,uKAII,OACE,6BACE,kBAAC,EAAD,MACA,kBAACf,EAAA,EAAD,KACGL,KAAKL,MAAM0B,eARtB,GAA4BJ,aAAfG,EACJF,YAAcE,EAAOD,KCHvB,IAAMG,EAAb,uKAII,OACE,6BACE,6CACA,uFACA,4BACE,4BAAI,uBAAGC,KAAK,wBAAR,gBAAJ,QAAwD,uBAAGA,KAAK,0DAAR,MAAxD,wCACA,4BAAI,uBAAGA,KAAK,qCAAR,SAAJ,yBACA,4BAAI,uBAAGA,KAAK,4BAAR,aAAJ,4BAEF,4EACA,4BACE,4BAAI,0DAAJ,wBAAgE,uCAAhE,SAAsF,oCAAtF,oBACA,4BAAI,kEAAJ,sDAAsG,kDAAtG,yJACA,4BAAI,+DAAJ,0EAAuH,gDAAvH,4EAEF,kCAAO,2CAAP,8DAAwF,kDAAxF,0EAA4L,qCAA5L,qBAA8N,0CAA9N,OAAuP,6CAAvP,UAnBR,GAA0BN,aAAbK,EACJJ,YAAcI,EAAKH,K,6BCDfK,EAAb,kDAGE,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CAAE2B,UAAW,GAAIC,SAAS,GAFtB,EAHrB,gEASI1B,KAAK2B,wBATT,+BAsCI,IAAIC,EAAW5B,KAAKF,MAAM4B,QACtB,2BAAG,2CACHF,EAAUK,qBAAqB7B,KAAKF,MAAM2B,WAE9C,OACE,6BACE,wBAAIK,GAAG,cAAP,oBACA,yFACCF,KA9CT,8KAoD2BG,MAAM,mBApDjC,cAoDUC,EApDV,gBAqDuBA,EAASC,OArDhC,OAqDUC,EArDV,OAsDIlC,KAAKC,SAAS,CAAEwB,UAAWS,EAAMR,SAAS,IAtD9C,mJAY8BD,GAC1B,OACE,2BAAOtB,UAAU,sBAAsBgC,kBAAgB,cACrD,+BACE,4BACE,oCACA,yCACA,yCACA,yCAGJ,+BACGV,EAAUW,KAAI,SAAAC,GAAQ,OACrB,wBAAIC,IAAKD,EAASE,MAChB,4BAAKF,EAASE,MACd,4BAAKF,EAASG,cACd,4BAAKH,EAASI,cACd,4BAAKJ,EAASK,mBA7B5B,GAA+BzB,aAAlBO,EACJN,YAAcM,EAAUL,KCD1B,IAAMwB,EAAb,kDAGE,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CAAE8C,aAAc,GAC7B,EAAKC,iBAAmB,EAAKA,iBAAiBhD,KAAtB,gBAHP,EAHrB,+DAUIG,KAAKC,SAAS,CACZ2C,aAAc5C,KAAKF,MAAM8C,aAAe,MAX9C,+BAgBI,OACE,6BACE,uCAEA,6EAEA,uBAAGE,YAAU,UAAb,kBACiB,gCAAS9C,KAAKF,MAAM8C,eAGrC,4BAAQzC,UAAU,kBAAkBQ,QAASX,KAAK6C,kBAAlD,kBA1BR,GAA6B5B,aAAhB0B,EACJzB,YAAcyB,EAAQxB,K,YCClB4B,G,MAAb,uKAEI,IAAIR,EAAO,IAAIS,KACf,OACE,oCACE,yBAAK7C,UAAU,QACb,gCACE,kBAAC,IAAD,OAEF,0BAAMA,UAAU,SACboC,EAAKU,cAAgB,WAAQV,EAAKW,WAAa,GAAK,UAEvD,gCACE,kBAAC,IAAD,aAbZ,GAAkCjC,c,iBCDrBkC,G,YAAb,uKAGI,OADAC,QAAQC,IAAIrD,MAEV,yBAAKG,UAAU,SACb,yBAAKA,UAAU,eACb,6BACE,2BAAOmD,YAAY,wBAErB,6BACE,0DACA,2BAAOC,KAAK,SACZ,2BAAOA,KAAK,UAEd,6BACE,0DACA,2BAAOA,KAAK,UAEd,6BACE,4BAAQpD,UAAU,SAASQ,QAASX,KAAKL,MAAM6D,YAA/C,uBAnBZ,GAAiCC,IAAMxC,YCEvC,SAASyC,EAAS/D,GAQhB,IAPA,IAAMgE,EAAQC,MACRC,EAAYF,EAAMG,QAAQC,QAAQ,SAASC,OAC3CC,EACoC,IAAxCN,EAAMG,QAAQI,MAAM,SAASF,OACzB,GACAL,EAAMG,QAAQI,MAAM,SAASF,OAC/BG,EAAW,GAPQ,WAQdH,GACPG,EAASC,KACP,yBAAKjE,UAAU,MAAMmC,IAAK0B,GACvBK,MAAM,GACJC,KAAK,GACLlC,KAAI,SAACmC,EAAGC,GACP,IAAIC,EAAUd,EACXG,QACAE,KAAKA,GACLD,QAAQ,QACRW,IAAIH,EAAIC,EAAG,OACVG,EACFhB,EAAMiB,OAAO,cAAgBH,EAAQG,OAAO,YACxC,WACA,GACFC,EACFJ,EAAQG,OAAO,QAAUjB,EAAMiB,OAAO,MAAQ,GAAK,SACjDE,EACFnB,EAAMiB,OAAO,cAAgBH,EAAQG,OAAO,YACxC,QACA,GACN,OACE,yBACEzE,UAAS,eAAUwE,EAAV,YAAwBE,EAAxB,YAAoCC,GAC7CxC,IAAKkC,EACLO,SAAUN,EAAQG,OAAO,YACzBjE,QAAShB,EAAMqF,WAEf,yBAAK7E,UAAU,OAAOsE,EAAQG,OAAO,MACrC,yBAAKzE,UAAU,mBA7BpB6D,EAAOH,EAAWG,GAAQC,EAASD,IAAS,EAA5CA,GAoCT,OAAOG,EAGF,IAAMc,EAAb,kDACE,aAAe,IAAD,8BACZ,gBACKnF,MAAQ,CACXoF,WAAW,GAHD,EADhB,0DASIlF,KAAKC,SAAS,CACZiF,WAAYlF,KAAKF,MAAMoF,cAV7B,+BAeI,OACE,oCACE,yBAAK/E,UAAU,OACb,kBAACuD,EAAD,CAAUsB,UAAWhF,KAAKmF,YAAYtF,KAAKG,QAC1CA,KAAKF,MAAMoF,UACV,kBAAC,EAAD,CAAa1B,WAAYxD,KAAKmF,YAAYtF,KAAKG,QAC7C,WArBd,GAAkCiB,aChDrBmE,G,MAAb,uKAEI,OACE,oCACE,yBAAKjF,UAAU,QACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,QAAhB,QAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,QAAhB,QAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,QAAhB,QAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,QAAhB,QAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,QAAhB,QAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,QAAhB,QAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,QAAhB,SAGJ,kBAAC,EAAD,YA5BV,GAAkCc,cCCrBoE,G,MAAb,uKAEI,OACE,yBAAKlF,UAAU,YACb,kBAAC,EAAD,MACA,kBAAC,EAAD,WALR,GAA8Bc,cCFjBqE,EAAb,uKAEI,OACE,oCACE,6BACE,kBAAC,EAAD,YALV,GAA4BrE,aCUPsE,G,6KAIjB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpE,IACjC,kBAAC,IAAD,CAAOmE,KAAK,UAAUC,UAAWJ,IACjC,kBAAC,IAAD,CAAOG,KAAK,YAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,WAAWC,UAAW/C,IAClC,kBAAC,IAAD,CAAO8C,KAAK,cAAcC,UAAWlE,S,GAVZP,cAAZsE,EACZrE,YAAcqE,EAAIpE,KCJ3B,IAAMwE,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BJ,SAASC,EAAiBC,GACxBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3G,QACfqG,UAAUC,cAAcQ,WAK1BxD,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBwD,OAAM,SAAAC,GACL1D,QAAQ0D,MAAM,4CAA6CA,MC/DjE,IAAMC,EAAUC,SAASC,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,EAAcH,SAASI,eAAe,QAE5CC,IAASC,OACP,kBAAC,IAAD,CAAeC,SAAUR,GACvB,kBAAC,EAAD,OAEFI,GDMa,WACb,GAA6C,kBAAmBhB,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,GAAwB5B,OAAOC,UAC3C4B,SAAW7B,OAAOC,SAAS4B,OAIvC,OAGF7B,OAAO8B,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMuB,GAAN,sBAEP9B,EAwCV,SAAkCO,GAEhCnE,MAAMmE,GACHI,MAAK,SAAAtE,GAGkB,MAApBA,EAAS4F,SACuD,IAAhE5F,EAAS6F,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BT,OAAOC,SAASoC,eAKpBjC,EAAgBC,MAGnBW,OAAM,WACLzD,QAAQC,IACN,oEA5DA8E,CAAwBjC,GAGxBD,EAAgBC,OCvBxBkC,K","file":"static/js/main.4596c234.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Container,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./NavMenu.css\";\n\nexport class NavMenu extends Component {\n  static displayName = NavMenu.name;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true,\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  }\n\n  render() {\n    return (\n      <header>\n        <Navbar\n          className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\"\n          light\n        >\n          <Container>\n            <NavbarBrand tag={Link} to=\"/\">\n              월급계산기\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n            <Collapse\n              className=\"d-sm-inline-flex flex-sm-row-reverse\"\n              isOpen={!this.state.collapsed}\n              navbar\n            >\n              <ul className=\"navbar-nav flex-grow\">\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">\n                    Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/salary\">\n                    급여관리\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">\n                    Counter\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">\n                    Fetch data\n                  </NavLink>\n                </NavItem>\n              </ul>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport { NavMenu } from './NavMenu';\n\nexport class Layout extends Component {\n  static displayName = Layout.name;\n\n  render () {\n    return (\n      <div>\n        <NavMenu />\n        <Container>\n          {this.props.children}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class Home extends Component {\n  static displayName = Home.name;\n\n  render () {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <p>Welcome to your new single-page application, built with:</p>\n        <ul>\n          <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\n          <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\n        </ul>\n        <p>To help you get started, we have also set up:</p>\n        <ul>\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\n          <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\n        </ul>\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class FetchData extends Component {\n  static displayName = FetchData.name;\n\n  constructor(props) {\n    super(props);\n    this.state = { forecasts: [], loading: true };\n  }\n\n  componentDidMount() {\n    this.populateWeatherData();\n  }\n\n  static renderForecastsTable(forecasts) {\n    return (\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Temp. (C)</th>\n            <th>Temp. (F)</th>\n            <th>Summary</th>\n          </tr>\n        </thead>\n        <tbody>\n          {forecasts.map(forecast =>\n            <tr key={forecast.date}>\n              <td>{forecast.date}</td>\n              <td>{forecast.temperatureC}</td>\n              <td>{forecast.temperatureF}</td>\n              <td>{forecast.summary}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    );\n  }\n\n  render() {\n    let contents = this.state.loading\n      ? <p><em>Loading...</em></p>\n      : FetchData.renderForecastsTable(this.state.forecasts);\n\n    return (\n      <div>\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\n        <p>This component demonstrates fetching data from the server.</p>\n        {contents}\n      </div>\n    );\n  }\n\n  async populateWeatherData() {\n    const response = await fetch('weatherforecast');\n    const data = await response.json();\n    this.setState({ forecasts: data, loading: false });\n  }\n}\n","import React, { Component } from \"react\";\n\nexport class Counter extends Component {\n  static displayName = Counter.name;\n\n  constructor(props) {\n    super(props);\n    this.state = { currentCount: 0 };\n    this.incrementCounter = this.incrementCounter.bind(this);\n  }\n\n  incrementCounter() {\n    this.setState({\n      currentCount: this.state.currentCount + 1,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Counter</h1>\n\n        <p>This is a simple example of a React component.</p>\n\n        <p aria-live=\"polite\">\n          Current count: <strong>{this.state.currentCount}</strong>\n        </p>\n\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>\n          Increment\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { MdChevronLeft, MdChevronRight } from \"react-icons/md\";\nimport \"./CalendarHead.css\";\n\nexport class CalendarHead extends Component {\n  render() {\n    let date = new Date();\n    return (\n      <>\n        <div className=\"head\">\n          <button>\n            <MdChevronLeft />\n          </button>\n          <span className=\"title\">\n            {date.getFullYear() + \"년 \" + (date.getMonth() + 1) + \"월\"}\n          </span>\n          <button>\n            <MdChevronRight />\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./RegSchedule.css\";\n\nexport class RegSchedule extends React.Component {\n  render() {\n    console.log(this);\n    return (\n      <div className=\"popup\">\n        <div className=\"popup_inner\">\n          <div>\n            <input placeholder=\"근무자\" />\n          </div>\n          <div>\n            <span>근무시작</span>\n            <input type=\"date\"></input>\n            <input type=\"time\"></input>\n          </div>\n          <div>\n            <span>근무종료</span>\n            <input type=\"date\"></input>\n          </div>\n          <div>\n            <button className=\"header\" onClick={this.props.closePopup}>\n              닫기\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./DayComponent.css\";\nimport { RegSchedule } from \"./RegSchedule\";\n\nfunction Generate(props) {\n  const today = moment();\n  const startWeek = today.clone().startOf(\"month\").week();\n  const endWeek =\n    today.clone().endOf(\"month\").week() === 1\n      ? 53\n      : today.clone().endOf(\"month\").week();\n  let calendar = [];\n  for (let week = startWeek; week <= endWeek; week++) {\n    calendar.push(\n      <div className=\"row\" key={week}>\n        {Array(7)\n          .fill(0)\n          .map((n, i) => {\n            let current = today\n              .clone()\n              .week(week)\n              .startOf(\"week\")\n              .add(n + i, \"day\");\n            let isSelected =\n              today.format(\"YYYYMMDD\") === current.format(\"YYYYMMDD\")\n                ? \"selected\"\n                : \"\";\n            let isGrayed =\n              current.format(\"MM\") === today.format(\"MM\") ? \"\" : \"grayed\";\n            let isToday =\n              today.format(\"YYYYMMDD\") === current.format(\"YYYYMMDD\")\n                ? \"today\"\n                : \"\";\n            return (\n              <div\n                className={`box  ${isSelected} ${isGrayed} ${isToday}`}\n                key={i}\n                cur_date={current.format(\"YYYYMMDD\")}\n                onClick={props.openPopup}\n              >\n                <div className=\"day\">{current.format(\"D\")}</div>\n                <div className=\"content\"></div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n  return calendar;\n}\n\nexport class DayComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showPopup: false,\n    };\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"day\">\n          <Generate openPopup={this.togglePopup.bind(this)}></Generate>\n          {this.state.showPopup ? (\n            <RegSchedule closePopup={this.togglePopup.bind(this)} />\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { DayComponent } from \"./DayComponent\";\nimport \"./CalendarBody.css\";\n\nexport class CalendarBody extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"body\">\n          <div className=\"row\">\n            <div className=\"boxHeader\">\n              <span className=\"text\">SUN</span>\n            </div>\n            <div className=\"boxHeader\">\n              <span className=\"text\">MON</span>\n            </div>\n            <div className=\"boxHeader\">\n              <span className=\"text\">TUE</span>\n            </div>\n            <div className=\"boxHeader\">\n              <span className=\"text\">WED</span>\n            </div>\n            <div className=\"boxHeader\">\n              <span className=\"text\">THU</span>\n            </div>\n            <div className=\"boxHeader\">\n              <span className=\"text\">FRI</span>\n            </div>\n            <div className=\"boxHeader\">\n              <span className=\"text\">SAT</span>\n            </div>\n          </div>\n          <DayComponent></DayComponent>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { CalendarHead } from \"./CalendarHead\";\nimport { CalendarBody } from \"./CalendarBody\";\nimport \"./Calendar.css\";\n\nexport class Calendar extends Component {\n  render() {\n    return (\n      <div className=\"Calendar\">\n        <CalendarHead></CalendarHead>\n        <CalendarBody></CalendarBody>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Calendar } from \"./Calendar/Calendar\";\n\nexport class Salary extends Component {\n  render() {\n    return (\n      <>\n        <div>\n          <Calendar></Calendar>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router\";\nimport { Layout } from \"./components/Layout\";\nimport { Home } from \"./components/Home\";\nimport { FetchData } from \"./components/FetchData\";\nimport { Counter } from \"./components/Counter\";\nimport { Salary } from \"./components/Salary\";\nimport { Calendar } from \"./components/Calendar/Calendar\";\n\n\n\nimport \"./custom.css\";\n\nexport default class App extends Component {\n  static displayName = App.name;\n\n  render() {\n    return (\n      <Layout>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/salary\" component={Salary} />\n        <Route path=\"/calendar\" component={Calendar} />\n        <Route path=\"/counter\" component={Counter} />\n        <Route path=\"/fetch-data\" component={FetchData} />\n      </Layout>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>,\n  rootElement);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}